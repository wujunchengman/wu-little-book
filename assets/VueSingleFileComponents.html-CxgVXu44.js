import{_ as s,c as a,a as t,o as p}from"./app-Bah7_sEf.js";const e={};function l(c,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="vue单文件组件" tabindex="-1"><a class="header-anchor" href="#vue单文件组件"><span>Vue单文件组件</span></a></h1><p>早些年的前端代码，Html、CSS、JavaScript都是在一个文件的，后来随着页面的内容越来越丰富，样式越来越复杂，便习惯将Html、CSS、JavaScript代码分开存放，这是一种低耦合思想的具体实践，对代码的维护有积极作用</p><p>随着前端的不断发展，页面的复杂度进一步提高，即使将Html、CSS、JavaScript分开存放，依然非常的难以管理，又随着前端模块化与打包工具发展，页面可以被分割成一块一块的小组件，不用再将所有的放在一起，而分割后的小组件本身变得不再复杂，且功能专一，因此再将一个小组件分为Html、CSS、JavaScript多个文件反而不利于开发与维护，于是Vue中提出了Vue单文件组件，将Html、CSS、JavaScript放在一起，这是一种高内聚的具体实践，至于评价则需要经过时间的检验</p><blockquote><p>以上的介绍均来自个人臆想，看个乐子</p></blockquote><p>Vue单文件组件以<code>.vue</code>为后缀，将一个组件的模板、样式、逻辑封装在同一个文件里</p><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue" data-title="vue"><pre><code><span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>count++<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Count is: {{ count }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line"><span class="token selector">button</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>template是组件的模板，类似于原生网页的Html，决定页面的组件，绑定对应的数据与操作事件，style决定样式，script决定了行为逻辑，具体的用法与写法后面细说</p>`,7)]))}const o=s(e,[["render",l]]),u=JSON.parse('{"path":"/Vue/Basic/VueSingleFileComponents.html","title":"Vue单文件组件","lang":"zh-CN","frontmatter":{"title":"Vue单文件组件"},"headers":[],"git":{"updatedTime":1696922216000,"contributors":[{"name":"吴俊城","email":"wujunchengman@163.com","commits":1}]},"filePathRelative":"Vue/Basic/VueSingleFileComponents.md"}');export{o as comp,u as data};
