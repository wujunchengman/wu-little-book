import{_ as s,c as a,a as t,o as e}from"./app-Bah7_sEf.js";const p={};function c(i,n){return e(),a("div",null,n[0]||(n[0]=[t(`<p>Rust使用fn关键字声明函数，Rust 代码中的函数和变量名使用 snake case 规范风格。在 snake case 中，所有字母都是小写并使用下划线分隔单词</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs" data-title="rs"><pre><code><span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span></span>
<span class="line">    x <span class="token operator">+</span> y</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Rust定义函数时，所有参数必须要指定类型，如果有返回值也要指定返回值的类型，与大多数编程语言相同。有点区别的是，Rust的类型是后置的，所以函数的返回值在参数的括号之后，跟在<code>-&gt;</code>之后的是返回值类型，与C#和Java等类型前置的编程语言不大相同</p><p>还有一点特别的，就是Rust的返回值，Rust可以通过return返回值，除了这种方式，还可以写一个表达式，Rust会将表达式的值作为返回值（表达式计算并产生一个值）</p>`,4)]))}const l=s(p,[["render",c]]),u=JSON.parse('{"path":"/Rust/Function.html","title":"函数","lang":"zh-CN","frontmatter":{"title":"函数"},"headers":[],"git":{"updatedTime":1740270918000,"contributors":[{"name":"吴俊城","email":"wujunchengman@163.com","commits":1}]},"filePathRelative":"Rust/Function.md"}');export{l as comp,u as data};
