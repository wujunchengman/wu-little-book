import{_ as s,c as n,a,o as t}from"./app-Bah7_sEf.js";const r="/assets/WindowsFeatures-DjN1CEP6.png",o="/assets/MicrosoftStore-CwDY18mj.png",l="/assets/StartMenu-Tq6yAYCv.png",p={};function i(d,e){return t(),n("div",null,e[0]||(e[0]=[a('<h1 id="docker-desktop在windows上的安装" tabindex="-1"><a class="header-anchor" href="#docker-desktop在windows上的安装"><span>Docker Desktop在Windows上的安装</span></a></h1><blockquote><p>有朋友最近学习的时候用到了Docker，但是他自己装一直没装上，因此这里稍微写写。其实Docker Desktop在Windows上的安装一直下一步就行了，但是也有一点小坑，那就是现在的Docker是需要WSL2的，因此必须先把WSL安装好</p></blockquote><h2 id="安装docker-desktop的前的准备" tabindex="-1"><a class="header-anchor" href="#安装docker-desktop的前的准备"><span>安装Docker Desktop的前的准备</span></a></h2><h3 id="启用hyper-v" tabindex="-1"><a class="header-anchor" href="#启用hyper-v"><span>启用Hyper-v</span></a></h3><p>因为Docker Desktop需要依赖WSL2，因此需要先把WSL2安装好</p><p>WSL2是基于Hyper-v的技术，因此要在Windows功能中把Hyper-v相关的功能启用，以下是我启用的<img src="'+r+`" alt="启用或关闭Windows功能"></p><p>这里面可能有些冗余，但是与之相关的都在里面了，应该不会出错。</p><h3 id="安装wsl2内核" tabindex="-1"><a class="header-anchor" href="#安装wsl2内核"><span>安装WSL2内核</span></a></h3><p>安装WSL2微软提供了<a href="https://learn.microsoft.com/zh-cn/windows/wsl/install-manual" target="_blank" rel="noopener noreferrer">文档</a>，这里面的第一步启用适用于 Linux 的 Windows 子系统刚刚已经通过图形界面启用了，这里不用再执行了</p><p>第二步是确认运行要求，这里我用的是Win10的工作站版，理论上除了家庭版应该都行，然后微软有个LSTC版，我试了一下，运行不了，也许有其他人知道怎么弄吧，但我这边就是安装了运行不了</p><p>第三步是启用虚拟机功能，这一步在前面的图形界面也是一并启用了，这里不需要再操作了</p><p>第四步是下载Linux内核更新包，这里就是下载出来安装就好了。下载地址：<a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi" target="_blank" rel="noopener noreferrer">适用于 x64 计算机的 WSL2 Linux 内核更新包</a></p><p>第五步是设置WSL默认使用2版本，以前有过WSL1，它与WSL2各有优劣，但是微软肯定是只搞2了，因为WSL2不用单独维护内核及周边</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">wsl --set-default-version <span class="token number">2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>第六步就是安装一个WSL发行版，这里推荐是使用Ubuntu，我之前试过其他的，好像要Ubuntu才可以。安装WSL发行版可以使用Microsoft Store来安装，毕竟图形界面，简单易操作 <img src="`+o+'" alt="MicrosoftStore"> 这里选这个Ubuntu，之前我试过其他版本的Ubuntu，好像也不行，不知道是哪里弄错了，但是这个倒是每次都可以</p><p>第七步是微软的文档没有的，这一步需要点开下载的Ubuntu，进行配置激活，最后能进到Ubuntu系统里面就行成了</p><p>安装完成后一定有两个<img src="'+l+`" alt="StartMenu"></p><p>有时候我发现开始菜单没有WSL，这时候安装Docker后运行就会一直卡在启动Docker Engine，如果开始菜单没有WSL，就执行</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">wsl <span class="token parameter variable">--update</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>更新一下，一般情况下，更新完之后就有WSL了</p><h3 id="安装docker-desktop" tabindex="-1"><a class="header-anchor" href="#安装docker-desktop"><span>安装Docker Desktop</span></a></h3><p>在Winddows上安装程序基本上都是非常简单的事情，如果上面的每一步都做了，那么这里只需要点开Docker Desktop的安装包，一直下一步就好。如果启动后发现一直卡在启动Docker Engine，按照上面的安装WSL的步骤走一遍，再重新安装Docker，应该是不会有问题了，这里就不再写简单的点下一步了。</p>`,22)]))}const k=s(p,[["render",i]]),h=JSON.parse('{"path":"/Backend/Docker/Install.html","title":"Docker Desktop在Windows上的安装（一直卡在正在启动的解决办法）","lang":"zh-CN","frontmatter":{"title":"Docker Desktop在Windows上的安装（一直卡在正在启动的解决办法）"},"headers":[{"level":2,"title":"安装Docker Desktop的前的准备","slug":"安装docker-desktop的前的准备","link":"#安装docker-desktop的前的准备","children":[{"level":3,"title":"启用Hyper-v","slug":"启用hyper-v","link":"#启用hyper-v","children":[]},{"level":3,"title":"安装WSL2内核","slug":"安装wsl2内核","link":"#安装wsl2内核","children":[]},{"level":3,"title":"安装Docker Desktop","slug":"安装docker-desktop","link":"#安装docker-desktop","children":[]}]}],"git":{"updatedTime":1709391000000,"contributors":[{"name":"吴俊城","email":"wujunchengman@163.com","commits":1}]},"filePathRelative":"Backend/Docker/Install.md"}');export{k as comp,h as data};
