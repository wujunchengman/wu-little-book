import{_ as s,c as a,a as t,o as p}from"./app-Bah7_sEf.js";const e="/assets/20220608_DynamicListView1-DLX7qv6v.png",l="/assets/20220608_DynamicListView2-6xxGWYar.png",o="/assets/20220608_DynamicListView3-BPiAJpuU.png",c={};function i(u,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="wpf动态生成listview-根据内容自动渲染列" tabindex="-1"><a class="header-anchor" href="#wpf动态生成listview-根据内容自动渲染列"><span>WPF动态生成ListView，根据内容自动渲染列</span></a></h1><p>最近写代码的时候遇到了这样一个需求，在一个页面中需要用ListView显示数据，但是这个地方会因为接入的设备不同，而接收不同的的数据，在ListView中也要根据对应的数据种类，显示出正确的表头和内容</p><p>经过一番测试，可以用下面的方法来动态的决定ListView的列和对应的绑定</p><p>首先，不能将ListView的列定义在XAML之中，如果写在XAML中，那么这个列和绑定关系则基本就定下来了，因此只能在后台中去绑定对应的列</p><h3 id="固定的写法" tabindex="-1"><a class="header-anchor" href="#固定的写法"><span>固定的写法</span></a></h3><p>平时使用ListView，大都是下面这种提前在XAML中将绑定写好了，不能在运行时根据需要进行动态增减列</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView</span> <span class="token attr-name">Grid.Row</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ItemsSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding Data}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView.View</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GridView</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GridView.Columns</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GridViewColumn</span> <span class="token attr-name">Header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>时间<span class="token punctuation">&quot;</span></span> <span class="token attr-name">DisplayMemberBinding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding Time}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GridViewColumn</span> <span class="token attr-name">Header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>A<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">DisplayMemberBinding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding DynamicData[0]}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>GridViewColumn</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GridViewColumn</span> <span class="token attr-name">Header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>B<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">DisplayMemberBinding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding DynamicData[1]}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>GridViewColumn</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GridViewColumn</span> <span class="token attr-name">Header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>C<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">DisplayMemberBinding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding DynamicData[2]}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>GridViewColumn</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>GridView.Columns</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>GridView</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListView.View</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListView</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+e+`" alt="固定的初始ListView"></p><p>从上面来看，ListView是通过<code>GridViewColumn</code>来进行绑定的，因此，若要动态调整，则需要动态调整对应的<code>GridViewColumn</code>，因此可以通过后台代码重新关联<code>GridViewColumn</code>进行操作</p><h3 id="动态的写法" tabindex="-1"><a class="header-anchor" href="#动态的写法"><span>动态的写法</span></a></h3><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line highlighted"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView</span> <span class="token attr-name">Grid.Row</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DynamicListViewControl<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ItemsSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding Data}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView.View</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GridView</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GridView.Columns</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GridViewColumn</span> <span class="token attr-name">Header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>时间<span class="token punctuation">&quot;</span></span> <span class="token attr-name">DisplayMemberBinding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding Time}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GridViewColumn</span> <span class="token attr-name">Header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>A<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">DisplayMemberBinding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding DynamicData[0]}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>GridViewColumn</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GridViewColumn</span> <span class="token attr-name">Header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>B<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">DisplayMemberBinding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding DynamicData[1]}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>GridViewColumn</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>GridViewColumn</span> <span class="token attr-name">Header</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>C<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">DisplayMemberBinding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{Binding DynamicData[2]}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>GridViewColumn</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>GridView.Columns</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>GridView</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListView.View</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListView</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以通过在给ListView绑定一个Name，这样就可以在后台拿到对应的ListView控件了</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs" data-title="cs"><pre><code><span class="line"><span class="token comment">// 拿到对应的GridView</span></span>
<span class="line"><span class="token class-name"><span class="token keyword">var</span></span> gridView <span class="token operator">=</span> <span class="token punctuation">(</span>GridView<span class="token punctuation">)</span>DynamicListViewControl<span class="token punctuation">.</span>View<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 移除第一列</span></span>
<span class="line">gridView<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">RemoveAt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只要能拿到ListView的GridView，就可以对ListView的绑定进行操作了，这里演示了删除一列 <img src="`+l+`" alt="后台删除一列后的ListView"></p><p>也可以添加一列</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs" data-title="cs"><pre><code><span class="line"><span class="token comment">// 拿到对应的GridView</span></span>
<span class="line"><span class="token class-name"><span class="token keyword">var</span></span> gridView <span class="token operator">=</span> <span class="token punctuation">(</span>GridView<span class="token punctuation">)</span>DynamicListViewControl<span class="token punctuation">.</span>View<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name"><span class="token keyword">var</span></span> binding <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Binding</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    Path <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PropertyPath</span><span class="token punctuation">(</span><span class="token string">&quot;DynamicData[0]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    StringFormat <span class="token operator">=</span> <span class="token string">&quot;重新添加的########&quot;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 创新新的GridViewColumn</span></span>
<span class="line"><span class="token class-name"><span class="token keyword">var</span></span> gridViewColumn <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">GridViewColumn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Header <span class="token operator">=</span> <span class="token string">&quot;新的A&quot;</span><span class="token punctuation">,</span> DisplayMemberBinding <span class="token operator">=</span> binding<span class="token punctuation">,</span> Width <span class="token operator">=</span> <span class="token number">150</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 添加到GridView中</span></span>
<span class="line">gridView<span class="token punctuation">.</span>Columns<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>gridViewColumn<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+o+'" alt="后台添加一列后的ListView"></p><p>改变绑定、改变样式、改变顺序，都可以以这样的方式进行操作</p><p>示例的完整源代码：<a href="https://gitee.com/wujunchengman/doc-example/tree/master/DynamicListView" target="_blank" rel="noopener noreferrer">Gitee-DynamicListView</a></p>',19)]))}const r=s(c,[["render",i]]),d=JSON.parse('{"path":"/Client/WPF/20220608_DynamicListView.html","title":"WPF动态生成ListView","lang":"zh-CN","frontmatter":{"title":"WPF动态生成ListView","description":"在WPF中，根据实际代码需要，动态渲染ListView列"},"headers":[{"level":3,"title":"固定的写法","slug":"固定的写法","link":"#固定的写法","children":[]},{"level":3,"title":"动态的写法","slug":"动态的写法","link":"#动态的写法","children":[]}],"git":{"updatedTime":1731572401000,"contributors":[{"name":"吴俊城","email":"wujunchengman@163.com","commits":1}]},"filePathRelative":"Client/WPF/20220608_DynamicListView.md"}');export{r as comp,d as data};
