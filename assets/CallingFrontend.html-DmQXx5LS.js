import{_ as s,c as a,a as p,o as t}from"./app-Bah7_sEf.js";const e={};function l(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="调用前端方法" tabindex="-1"><a class="header-anchor" href="#调用前端方法"><span>调用前端方法</span></a></h1><blockquote><p>Tauri使用Rust作为后端，但是官方说的后面可能增加其他编程语言的支持，但是目前仅是使用Rust，所以这篇的标题也可用叫『从Rust后端调用前端方法』</p></blockquote><p>Rust端可以使用Event、Channels或者Eval来调用Tauri应用的前端方法</p><h3 id="event系统" tabindex="-1"><a class="header-anchor" href="#event系统"><span>Event系统</span></a></h3><p>Tauri提供了一个简单的事件系统，可以使用它在Rust和前端之间进行双向通信</p><p>Event系统是针对需要流式传输少量数据或需要实现多消费者多生产者模式（例如推送通知系统）的情况而设计的。</p><p>Event系统不是为了低延迟或者高吞吐量情况设计的，针对这种情况请考虑使用针对流数据优化的Channels方式</p><p>command和event之间的主要区别是事件没有强类型支持，事件有效载荷总是JSON字符串，使其不适合更大的消息，并且不支持capabilities系统来精细控制event数据和channels。</p><p>AppHandle和WebviewWindow类型实现了event系统traits<code>Listener</code>和<code>Emitter</code> 。</p><p>事件可以是全局的（传递给所有侦听器），也可以是特定于web视图的（只传递给与给定标签匹配的web视图）。</p><h5 id="全局事件" tabindex="-1"><a class="header-anchor" href="#全局事件"><span>全局事件</span></a></h5><p>要触发一个全局事件，可以使用Emitter#emit函数：</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs" data-title="rs"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token namespace">tauri<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">AppHandle</span><span class="token punctuation">,</span> <span class="token class-name">Emitter</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[tauri::command]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">download</span><span class="token punctuation">(</span>app<span class="token punctuation">:</span> <span class="token class-name">AppHandle</span><span class="token punctuation">,</span> url<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;download-started&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">for</span> progress <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span> <span class="token punctuation">{</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;download-progress&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;download-finished&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：全局事件传递给所有侦听器</p><h5 id="webview事件" tabindex="-1"><a class="header-anchor" href="#webview事件"><span>WebView事件</span></a></h5><p>要向特定webview注册的侦听器触发事件，您可以使用Emitter#emit_to方法：</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs" data-title="rs"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token namespace">tauri<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">AppHandle</span><span class="token punctuation">,</span> <span class="token class-name">Emitter</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[tauri::command]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">login</span><span class="token punctuation">(</span>app<span class="token punctuation">:</span> <span class="token class-name">AppHandle</span><span class="token punctuation">,</span> user<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> password<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> authenticated <span class="token operator">=</span> user <span class="token operator">==</span> <span class="token string">&quot;tauri-apps&quot;</span> <span class="token operator">&amp;&amp;</span> password <span class="token operator">==</span> <span class="token string">&quot;tauri&quot;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token keyword">if</span> authenticated <span class="token punctuation">{</span> <span class="token string">&quot;loggedIn&quot;</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token string">&quot;invalidCredentials&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">  app<span class="token punctuation">.</span><span class="token function">emit_to</span><span class="token punctuation">(</span><span class="token string">&quot;login&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;login-result&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以通过调用Emitter#emit_filter来触发一个事件到一个web视图列表。在下面的示例中，我们向main和file-viewer webviews发出一个open-file事件：</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs" data-title="rs"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token namespace">tauri<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">AppHandle</span><span class="token punctuation">,</span> <span class="token class-name">Emitter</span><span class="token punctuation">,</span> <span class="token class-name">EventTarget</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[tauri::command]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">open_file</span><span class="token punctuation">(</span>app<span class="token punctuation">:</span> <span class="token class-name">AppHandle</span><span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token namespace">std<span class="token punctuation">::</span>path<span class="token punctuation">::</span></span><span class="token class-name">PathBuf</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  app<span class="token punctuation">.</span><span class="token function">emit_filter</span><span class="token punctuation">(</span><span class="token string">&quot;open-file&quot;</span><span class="token punctuation">,</span> path<span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>target<span class="token closure-punctuation punctuation">|</span></span> <span class="token keyword">match</span> target <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">EventTarget</span><span class="token punctuation">::</span><span class="token class-name">WebviewWindow</span> <span class="token punctuation">{</span> label <span class="token punctuation">}</span> <span class="token operator">=&gt;</span> label <span class="token operator">==</span> <span class="token string">&quot;main&quot;</span> <span class="token operator">||</span> label <span class="token operator">==</span> <span class="token string">&quot;file-viewer&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    _ <span class="token operator">=&gt;</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：特定于Webview的事件不会触发到常规全局事件侦听器。要侦听任何事件，必须使用listen_any函数而不是listen，后者定义侦听器作为已发出事件的全部内容。</p><h5 id="event-payload" tabindex="-1"><a class="header-anchor" href="#event-payload"><span>Event Payload</span></a></h5><p>Event Payload可以是任何也实现了Clone的可序列化类型。让我们通过使用对象在每个Event中发出更多信息来增强download事件示例：</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs" data-title="rs"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token namespace">tauri<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">AppHandle</span><span class="token punctuation">,</span> <span class="token class-name">Emitter</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token namespace">serde<span class="token punctuation">::</span></span><span class="token class-name">Serialize</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[derive(Clone, Serialize)]</span></span>
<span class="line"><span class="token attribute attr-name">#[serde(rename_all = <span class="token string">&quot;camelCase&quot;</span>)]</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token type-definition class-name">DownloadStarted</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;a</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  url<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">&#39;a</span> <span class="token keyword">str</span><span class="token punctuation">,</span></span>
<span class="line">  download_id<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">,</span></span>
<span class="line">  content_length<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[derive(Clone, Serialize)]</span></span>
<span class="line"><span class="token attribute attr-name">#[serde(rename_all = <span class="token string">&quot;camelCase&quot;</span>)]</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token type-definition class-name">DownloadProgress</span> <span class="token punctuation">{</span></span>
<span class="line">  download_id<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">,</span></span>
<span class="line">  chunk_length<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[derive(Clone, Serialize)]</span></span>
<span class="line"><span class="token attribute attr-name">#[serde(rename_all = <span class="token string">&quot;camelCase&quot;</span>)]</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token type-definition class-name">DownloadFinished</span> <span class="token punctuation">{</span></span>
<span class="line">  download_id<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[tauri::command]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">download</span><span class="token punctuation">(</span>app<span class="token punctuation">:</span> <span class="token class-name">AppHandle</span><span class="token punctuation">,</span> url<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> content_length <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> download_id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;download-started&quot;</span><span class="token punctuation">,</span> <span class="token class-name">DownloadStarted</span> <span class="token punctuation">{</span></span>
<span class="line">    url<span class="token punctuation">:</span> <span class="token operator">&amp;</span>url<span class="token punctuation">,</span></span>
<span class="line">    download_id<span class="token punctuation">,</span></span>
<span class="line">    content_length</span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">for</span> chunk_length <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">]</span> <span class="token punctuation">{</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;download-progress&quot;</span><span class="token punctuation">,</span> <span class="token class-name">DownloadProgress</span> <span class="token punctuation">{</span></span>
<span class="line">      download_id<span class="token punctuation">,</span></span>
<span class="line">      chunk_length<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  app<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;download-finished&quot;</span><span class="token punctuation">,</span> <span class="token class-name">DownloadFinished</span> <span class="token punctuation">{</span> download_id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="监听event" tabindex="-1"><a class="header-anchor" href="#监听event"><span>监听Event</span></a></h5><p>Tauri提供API来监听webview和Rust接口上的事件。</p><h6 id="在前端监听" tabindex="-1"><a class="header-anchor" href="#在前端监听"><span>在前端监听</span></a></h6><ul><li>监听全局事件</li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> listen <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tauri-apps/api/event&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> <span class="token class-name">DownloadStarted</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  downloadId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line">  contentLength<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token generic-function"><span class="token function">listen</span><span class="token generic class-name"><span class="token operator">&lt;</span>DownloadStarted<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;download-started&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">downloading </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>event<span class="token punctuation">.</span>payload<span class="token punctuation">.</span>contentLength<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> bytes from </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>event<span class="token punctuation">.</span>payload<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>监听特定webview事件</li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> getCurrentWebviewWindow <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tauri-apps/api/webviewWindow&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> appWebview <span class="token operator">=</span> <span class="token function">getCurrentWebviewWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">appWebview<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">listen</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;logged-in&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;session-token&#39;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>payload<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>listen函数在应用程序的整个生命周期内保持事件侦听器的注册状态。要停止监听事件，可以使用由unlisten函数返回的listen函数：</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> listen <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tauri-apps/api/event&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> unlisten <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">&#39;download-started&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">unlisten</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：当执行上下文超出作用域时，例如卸载组件时，请始终使用unlisten函数。</p><p>注意：当页面被重新加载或导航到另一个URL时，侦听器将自动注销。但这不适用于单页应用程序（SPA）路由器。</p><p>此外，Tauri还提供了一个实用函数，用于只监听一次事件：</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> once <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tauri-apps/api/event&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> getCurrentWebviewWindow <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tauri-apps/api/webviewWindow&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;ready&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> appWebview <span class="token operator">=</span> <span class="token function">getCurrentWebviewWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">appWebview<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;ready&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：在前端发出的事件也会触发这些API注册的侦听器。有关更多信息，请参阅从前端调用Rust文档。</p><h6 id="在rust后端监听" tabindex="-1"><a class="header-anchor" href="#在rust后端监听"><span>在Rust后端监听</span></a></h6><p>全局和特定于webview的事件也会传递给在Rust中注册的侦听器。</p><ul><li>监听全局事件</li></ul><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs" data-title="rs"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token namespace">tauri<span class="token punctuation">::</span></span><span class="token class-name">Listener</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[cfg_attr(mobile, tauri::mobile_entry_point)]</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token namespace">tauri<span class="token punctuation">::</span></span><span class="token class-name">Builder</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>app<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span></span>
<span class="line">      app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">&quot;download-started&quot;</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>event<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Ok</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token namespace">serde_json<span class="token punctuation">::</span></span><span class="token function">from_str</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">DownloadStarted</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>event<span class="token punctuation">.</span><span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;downloading {}&quot;</span><span class="token punctuation">,</span> payload<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token namespace">tauri<span class="token punctuation">::</span></span><span class="token macro property">generate_context!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;error while running tauri application&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>监听特定Webview的事件</li></ul><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs" data-title="rs"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token namespace">tauri<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">Listener</span><span class="token punctuation">,</span> <span class="token class-name">Manager</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[cfg_attr(mobile, tauri::mobile_entry_point)]</span></span>
<span class="line"><span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token namespace">tauri<span class="token punctuation">::</span></span><span class="token class-name">Builder</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>app<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">let</span> webview <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">get_webview_window</span><span class="token punctuation">(</span><span class="token string">&quot;main&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      webview<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">&quot;logged-in&quot;</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>event<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">let</span> session_token <span class="token operator">=</span> event<span class="token punctuation">.</span>data<span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// save token..</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token namespace">tauri<span class="token punctuation">::</span></span><span class="token macro property">generate_context!</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">expect</span><span class="token punctuation">(</span><span class="token string">&quot;error while running tauri application&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>listen函数在应用程序的整个生命周期内保持事件侦听器的注册状态。要停止监听事件，可以使用unlisten函数：</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs" data-title="rs"><pre><code><span class="line"><span class="token comment">// unlisten outside of the event handler scope:</span></span>
<span class="line"><span class="token keyword">let</span> event_id <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">&quot;download-started&quot;</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>event<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">unlisten</span><span class="token punctuation">(</span>event_id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// unlisten when some event criteria is matched</span></span>
<span class="line"><span class="token keyword">let</span> handle <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">&quot;status-changed&quot;</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>event<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> event<span class="token punctuation">.</span>data <span class="token operator">==</span> <span class="token string">&quot;ready&quot;</span> <span class="token punctuation">{</span></span>
<span class="line">    handle<span class="token punctuation">.</span><span class="token function">unlisten</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此外，Tauri还提供了一个实用函数，用于只监听一次事件：</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs" data-title="rs"><pre><code><span class="line">app<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&quot;ready&quot;</span><span class="token punctuation">,</span> <span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>event<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;app is ready&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这种情况下，事件侦听器在第一次触发后立即取消注册。</p><h3 id="channels" tabindex="-1"><a class="header-anchor" href="#channels"><span>Channels</span></a></h3><p>事件系统被设计成一个简单的双向通信，在您的应用程序中全局可用。在底层，它直接执行JavaScript代码，因此它可能不适合发送大量数据。</p><p>Channels旨在快速并提供有序数据。它们在内部用于流操作，如下载进度、子进程输出和WebSocket消息。</p><p>让我们重写我们的download命令示例，使用channels而不是Event系统：</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs" data-title="rs"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token namespace">tauri<span class="token punctuation">::</span></span><span class="token punctuation">{</span><span class="token class-name">AppHandle</span><span class="token punctuation">,</span> <span class="token namespace">ipc<span class="token punctuation">::</span></span><span class="token class-name">Channel</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">use</span> <span class="token namespace">serde<span class="token punctuation">::</span></span><span class="token class-name">Serialize</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[derive(Clone, Serialize)]</span></span>
<span class="line"><span class="token attribute attr-name">#[serde(rename_all = <span class="token string">&quot;camelCase&quot;</span>, tag = <span class="token string">&quot;event&quot;</span>, content = <span class="token string">&quot;data&quot;</span>)]</span></span>
<span class="line"><span class="token keyword">enum</span> <span class="token type-definition class-name">DownloadEvent</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;a</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token attribute attr-name">#[serde(rename_all = <span class="token string">&quot;camelCase&quot;</span>)]</span></span>
<span class="line">  <span class="token class-name">Started</span> <span class="token punctuation">{</span></span>
<span class="line">    url<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">&#39;a</span> <span class="token keyword">str</span><span class="token punctuation">,</span></span>
<span class="line">    download_id<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">,</span></span>
<span class="line">    content_length<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token attribute attr-name">#[serde(rename_all = <span class="token string">&quot;camelCase&quot;</span>)]</span></span>
<span class="line">  <span class="token class-name">Progress</span> <span class="token punctuation">{</span></span>
<span class="line">    download_id<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">,</span></span>
<span class="line">    chunk_length<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token attribute attr-name">#[serde(rename_all = <span class="token string">&quot;camelCase&quot;</span>)]</span></span>
<span class="line">  <span class="token class-name">Finished</span> <span class="token punctuation">{</span></span>
<span class="line">    download_id<span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token attribute attr-name">#[tauri::command]</span></span>
<span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">download</span><span class="token punctuation">(</span>app<span class="token punctuation">:</span> <span class="token class-name">AppHandle</span><span class="token punctuation">,</span> url<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> on_event<span class="token punctuation">:</span> <span class="token class-name">Channel</span><span class="token operator">&lt;</span><span class="token class-name">DownloadEvent</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> content_length <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">let</span> download_id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  on_event<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">DownloadEvent</span><span class="token punctuation">::</span><span class="token class-name">Started</span> <span class="token punctuation">{</span></span>
<span class="line">    url<span class="token punctuation">:</span> <span class="token operator">&amp;</span>url<span class="token punctuation">,</span></span>
<span class="line">    download_id<span class="token punctuation">,</span></span>
<span class="line">    content_length<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">for</span> chunk_length <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">]</span> <span class="token punctuation">{</span></span>
<span class="line">    on_event<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">DownloadEvent</span><span class="token punctuation">::</span><span class="token class-name">Progress</span> <span class="token punctuation">{</span></span>
<span class="line">      download_id<span class="token punctuation">,</span></span>
<span class="line">      chunk_length<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  on_event<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">DownloadEvent</span><span class="token punctuation">::</span><span class="token class-name">Finished</span> <span class="token punctuation">{</span> download_id <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用download命令时，必须创建通道并将其作为参数提供：</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> invoke<span class="token punctuation">,</span> Channel <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@tauri-apps/api/core&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">type</span> <span class="token class-name">DownloadEvent</span> <span class="token operator">=</span></span>
<span class="line">  <span class="token operator">|</span> <span class="token punctuation">{</span></span>
<span class="line">      event<span class="token operator">:</span> <span class="token string">&#39;started&#39;</span><span class="token punctuation">;</span></span>
<span class="line">      data<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">        downloadId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line">        contentLength<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token operator">|</span> <span class="token punctuation">{</span></span>
<span class="line">      event<span class="token operator">:</span> <span class="token string">&#39;progress&#39;</span><span class="token punctuation">;</span></span>
<span class="line">      data<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        downloadId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line">        chunkLength<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token operator">|</span> <span class="token punctuation">{</span></span>
<span class="line">      event<span class="token operator">:</span> <span class="token string">&#39;finished&#39;</span><span class="token punctuation">;</span></span>
<span class="line">      data<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        downloadId<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> onEvent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Channel<span class="token operator">&lt;</span>DownloadEvent<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">onEvent<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">got download event </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>message<span class="token punctuation">.</span>event<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">await</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">&#39;download&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  url<span class="token operator">:</span> <span class="token string">&#39;https://raw.githubusercontent.com/tauri-apps/tauri/dev/crates/tauri-schema-generator/schemas/config.schema.json&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  onEvent<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行javascript代码" tabindex="-1"><a class="header-anchor" href="#执行javascript代码"><span>执行Javascript代码</span></a></h3><p>要在webview上下文中直接执行任何JavaScript代码，可以使用WebviewWindow#eval函数：</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs" data-title="rs"><pre><code><span class="line"><span class="token keyword">use</span> <span class="token namespace">tauri<span class="token punctuation">::</span></span><span class="token class-name">Manager</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token namespace">tauri<span class="token punctuation">::</span></span><span class="token class-name">Builder</span><span class="token punctuation">::</span><span class="token function">default</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">setup</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>app<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> webview <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">get_webview_window</span><span class="token punctuation">(</span><span class="token string">&quot;main&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    webview<span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&quot;console.log(&#39;hello from Rust&#39;)&quot;</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果要执行的脚本不是那么简单，并且必须使用来自Rust对象的输入，建议使用serialize-to-JavaScript crate。</p>`,59)]))}const i=s(e,[["render",l]]),u=JSON.parse('{"path":"/Client/Tauri/CallingFrontend.html","title":"调用前端方法","lang":"zh-CN","frontmatter":{"title":"调用前端方法"},"headers":[{"level":3,"title":"Event系统","slug":"event系统","link":"#event系统","children":[]},{"level":3,"title":"Channels","slug":"channels","link":"#channels","children":[]},{"level":3,"title":"执行Javascript代码","slug":"执行javascript代码","link":"#执行javascript代码","children":[]}],"git":{"updatedTime":1731661583000,"contributors":[{"name":"吴俊城","email":"wujunchengman@163.com","commits":1}]},"filePathRelative":"Client/Tauri/CallingFrontend.md"}');export{i as comp,u as data};
