import{_ as s,c as a,a as e,o as t}from"./app-Bah7_sEf.js";const p={};function l(i,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="建一个简单的mqtt服务器-基于mqttnet" tabindex="-1"><a class="header-anchor" href="#建一个简单的mqtt服务器-基于mqttnet"><span>建一个简单的MQTT服务器（基于MQTTnet）</span></a></h1><blockquote><p>MQTTnet是一个高性能的.NET库，用于基于MQTT的通信。它提供了一个MQTT客户端和一个MQTT服务器（代理）。</p></blockquote><p>自建MQTT服务器，考虑到一些操作可能需要由用户主动发起然后通过MQTT下发给设备，因此这里使用<code>MQTTnet.AspNetCore</code>，这里只是简单的想把MQTT Server放到Asp.Net Core上，因为Asp.Net Core提供了很多诸如依赖注入、托管主机、日志、配置文件之类的功能</p><h2 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目"><span>创建项目</span></a></h2><p>创建一个Asp.Net Core项目，可以是WebApi，也可以是其他的，只要有Kestrel就行（Worker不行，Woker没有Kestrel，只能用传统的方式建MQTT主机），因为这不是零基础文档，一次就不详细写了</p><h2 id="添加依赖" tabindex="-1"><a class="header-anchor" href="#添加依赖"><span>添加依赖</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">dotnet <span class="token function">add</span> package MQTTnet.AspNetCore</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="注入host" tabindex="-1"><a class="header-anchor" href="#注入host"><span>注入Host</span></a></h2><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs" data-title="cs"><pre><code><span class="line">builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddHostedMqttServer</span><span class="token punctuation">(</span>o <span class="token operator">=&gt;</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    o<span class="token punctuation">.</span><span class="token function">WithDefaultEndpoint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddMqttConnectionHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">builder<span class="token punctuation">.</span>WebHost<span class="token punctuation">.</span><span class="token function">ConfigureKestrel</span><span class="token punctuation">(</span>k <span class="token operator">=&gt;</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    k<span class="token punctuation">.</span><span class="token function">ListenAnyIP</span><span class="token punctuation">(</span><span class="token number">1883</span><span class="token punctuation">,</span> l <span class="token operator">=&gt;</span> l<span class="token punctuation">.</span><span class="token function">UseMqtt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 用于监听HTTP请求的端口，如果不需要就可以不写</span></span>
<span class="line">    <span class="token comment">// k.ListenAnyIP(5000);</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上文是引入一个默认的MQTT服务器，没有对事件进行任何操作，也没有身份认证之类的。只需要添加上述代码，就可以启动一个简单的没有任何逻辑的MQTT服务器了</p>`,10)]))}const o=s(p,[["render",l]]),u=JSON.parse('{"path":"/Projects/IotPlatform/a-little-mqtt-server.html","title":"建一个简单的MQTT服务器","lang":"zh-CN","frontmatter":{"title":"建一个简单的MQTT服务器"},"headers":[{"level":2,"title":"创建项目","slug":"创建项目","link":"#创建项目","children":[]},{"level":2,"title":"添加依赖","slug":"添加依赖","link":"#添加依赖","children":[]},{"level":2,"title":"注入Host","slug":"注入host","link":"#注入host","children":[]}],"git":{"updatedTime":1718074014000,"contributors":[{"name":"吴俊城","email":"wujunchengman@163.com","commits":1}]},"filePathRelative":"Projects/IotPlatform/a-little-mqtt-server.md"}');export{o as comp,u as data};
