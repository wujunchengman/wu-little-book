import{_ as s,c as a,a as p,o as e}from"./app-Bah7_sEf.js";const t={};function l(c,n){return e(),a("div",null,n[0]||(n[0]=[p(`<h1 id="判断字符串的显示宽度" tabindex="-1"><a class="header-anchor" href="#判断字符串的显示宽度"><span>判断字符串的显示宽度</span></a></h1><h2 id="起因" tabindex="-1"><a class="header-anchor" href="#起因"><span>起因：</span></a></h2><p>公司有一个使用项目使用HTML转换为PDF，其中有一个表格，表格的最后一列中的单元格，其字符串超长后会被丢弃，而不是换行到下一行展示（HtmlToPdf渲染引擎导致的，没办法更改）</p><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案：</span></a></h2><p>根据字符串长度手动添加<code>&lt;br/&gt;</code>换行</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs" data-title="cs"><pre><code><span class="line"><span class="token class-name"><span class="token keyword">var</span></span> source <span class="token operator">=</span> <span class="token string">&quot;ABCD&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">GetLength</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    source <span class="token operator">=</span> source<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&quot;&lt;br/&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 输出AB&lt;br/&gt;CD</span></span>
<span class="line"></span>
<span class="line"><span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">GetLength</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> src<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> src<span class="token punctuation">.</span>Length<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="出现了一个bug" tabindex="-1"><a class="header-anchor" href="#出现了一个bug"><span>出现了一个BUG：</span></a></h2><p>当原始内容中存在中文时，中文字符的显示宽度大于英文字符的宽度，按照字符串中的字符数进行处理，并不准确</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs" data-title="cs"><pre><code><span class="line"><span class="token comment">/*</span>
<span class="line">* 中文：中文&lt;br/&gt;CD</span>
<span class="line">* 英文：AB&lt;br/&gt;CD</span>
<span class="line">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="原因分析" tabindex="-1"><a class="header-anchor" href="#原因分析"><span>原因分析：</span></a></h2><p>在文字的显示中，有全角和半角的区别</p><p>全角：指一个字符占用两个标准字符位置的状态。</p><p>半角：指一个字符占用一个标准字符位置的状态。</p><h2 id="尝试解决" tabindex="-1"><a class="header-anchor" href="#尝试解决"><span>尝试解决：</span></a></h2><p>字符编码：最早的字符编码为Ascii码，只考虑了英文语种使用者，后来随着计算机的普及，有了其他编码，比如GB2312、UTF8等，不止包含英文的字符编码，但是这些编码都对Ascii码进行了兼容</p><p>没有细心求证的结论：Ascii码对应的是半角，中文扩展部分是全角展示，半角显示宽度为全角的一半（这结论是我猜的，没有求证，如果不对还请提出批评指正）</p><p>通过上面猜测的结论，可以先对每个字符判断是不是Ascii字符来决定当前是全角还是半角</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs" data-title="cs"><pre><code><span class="line"></span>
<span class="line"><span class="token class-name"><span class="token keyword">var</span></span> source <span class="token operator">=</span> <span class="token string">&quot;ABCD&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name"><span class="token keyword">var</span></span> index <span class="token operator">=</span><span class="token function">InserAtDisplayWidth</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>index<span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    source <span class="token operator">=</span> source<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span><span class="token string">&quot;&lt;br/&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// AB&lt;br/&gt;CD</span></span>
<span class="line">Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name"><span class="token keyword">var</span></span> source2 <span class="token operator">=</span> <span class="token string">&quot;中文CD&quot;</span><span class="token punctuation">;</span> </span>
<span class="line"><span class="token class-name"><span class="token keyword">var</span></span> index2 <span class="token operator">=</span><span class="token function">InserAtDisplayWidth</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>source2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>index2<span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    source2 <span class="token operator">=</span> source2<span class="token punctuation">.</span><span class="token function">Insert</span><span class="token punctuation">(</span>index2<span class="token punctuation">,</span><span class="token string">&quot;&lt;br/&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// 中&lt;br/&gt;文CD</span></span>
<span class="line">Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>source2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token return-type class-name"><span class="token keyword">int</span></span> <span class="token function">InserAtDisplayWidth</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> inserAtDisplayWidth<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> source<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name"><span class="token keyword">int</span></span> now <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> source<span class="token punctuation">.</span>Length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token keyword">char</span><span class="token punctuation">.</span><span class="token function">IsAscii</span><span class="token punctuation">(</span>source<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 半角占一个显示宽度</span></span>
<span class="line">            now <span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 全角占两个显示宽度</span></span>
<span class="line">            now <span class="token operator">+=</span><span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>now<span class="token operator">&gt;</span>inserAtDisplayWidth<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> i<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过对字符的判断，更加准确的匹配了分隔的位置，既避免了无效的空白区域，又避免了过长的字符串溢出导致看不到内容</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs" data-title="cs"><pre><code><span class="line"><span class="token comment">/*</span>
<span class="line">* AB&lt;br/&gt;CD</span>
<span class="line">* 中&lt;br/&gt;文CD</span>
<span class="line">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20)]))}const o=s(t,[["render",l]]),u=JSON.parse('{"path":"/ExperienceSharing/StringDisplayWidth.html","title":"字符串的显示宽度","lang":"zh-CN","frontmatter":{"title":"字符串的显示宽度"},"headers":[{"level":2,"title":"起因：","slug":"起因","link":"#起因","children":[]},{"level":2,"title":"解决方案：","slug":"解决方案","link":"#解决方案","children":[]},{"level":2,"title":"出现了一个BUG：","slug":"出现了一个bug","link":"#出现了一个bug","children":[]},{"level":2,"title":"原因分析：","slug":"原因分析","link":"#原因分析","children":[]},{"level":2,"title":"尝试解决：","slug":"尝试解决","link":"#尝试解决","children":[]}],"git":{"updatedTime":1729240878000,"contributors":[{"name":"吴俊城","email":"wujunchengman@163.com","commits":1}]},"filePathRelative":"ExperienceSharing/StringDisplayWidth.md"}');export{o as comp,u as data};
